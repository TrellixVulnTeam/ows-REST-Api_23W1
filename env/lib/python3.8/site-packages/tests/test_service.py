"""Test for service discovery module."""
from unittest import mock

from owsrequest.service import dev_service_mapping, discover


def test_service_discovery_ignores_casing():
    """Casing doesn't matter."""
    for environment in ['qa', 'QA']:
        domain = discover('ows-analytics', environment)
        assert domain == ('qa', 'qa-ows-analytics.theorchard.io')

        domain = discover('ows-analytics', environment.upper())
        assert domain == ('qa', 'qa-ows-analytics.theorchard.io')

    for environment in ['PROD', 'prod']:
        domain = discover('ows-analytics', environment)
        assert domain == ('prod', 'prod-ows-analytics.theorchard.io')


def test_service_discovery_in_dev_with_overrides():
    """Use a custom mapping in dev."""
    custom_mapping = {'ows-foo': 'my-ows-foo:4567'}
    with mock.patch.dict(dev_service_mapping, custom_mapping):

        # dev services not mentioned in the custom mapping default to qa
        domain = discover('ows-analytics', 'dev')
        assert domain == ('qa', 'qa-ows-analytics.theorchard.io')

        # dev services mentioned in the custom mapping resolve to
        # the specified url
        domain = discover('ows-foo', 'dev')
        assert domain == ('dev', 'my-ows-foo:4567')

        # The custom mapping has no effect on qa/prod service resolution
        assert discover('ows-foo', 'qa') == (
            'qa', 'qa-ows-foo.theorchard.io'
        )
        assert discover('ows-foo', 'prod') == (
            'prod', 'prod-ows-foo.theorchard.io'
        )
